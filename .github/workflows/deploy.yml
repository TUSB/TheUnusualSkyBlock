# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ dev, 1-16-4 ]
  pull_request:
    branches: [ dev, 1-16-4 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Print Public IP
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}
      
      - uses: actions/checkout@v2
      - name: Add Firewalld IP Address
        run: |
          ADD_FIREWALL=`curl "https://api.vultr.com/v2/firewalls/${{ secrets.VULTR_FIREWALL_GROUP_ID }}/rules" \
              -X POST \
              -H "Authorization: Bearer ${{ secrets.VULTR_API_KEY }}" \
              -H "Content-Type: application/json" \
              --data '{
              "ip_type": "v4",
              "protocol": "tcp",
              "port": "22",
              "subnet": "${{ steps.ip.outputs.ipv4 }}",
              "subnet_size": 32,
              "source": "",
              "notes": "GitHub Action Firewall Rule"
          }'`
          echo $ADD_FIREWALL
          
      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'
      - name: Deploy by rsync
        uses: trendyminds/github-actions-rsync@master
        with:
          RSYNC_OPTIONS: -avzr --delete
          RSYNC_SOURCE: /
          RSYNC_TARGET: /home/git/deploy/${{ github.event.repository.name }}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.TUSB_MINECRAFT_SERVER_PRIVATE_KEY }}
          SSH_USERNAME: ${{ secrets.TUSB_MINECRAFT_SERVER_REMOTE_USER }}
          SSH_HOSTNAME: ${{ secrets.TUSB_MINECRAFT_SERVER_REMOTE_HOST }}
          
      - if: always()
        name: Delete Firewalld IP Address
        run: |
          FIREWALL_ID=`echo "$ADD_FIREWALL" | jq '.firewall_rule.id'`
          DELETE_FIREWALL=`curl "https://api.vultr.com/v2/firewalls/${{ secrets.VULTR_FIREWALL_GROUP_ID }}/rules/${FIREWALL_ID}" \
            -X DELETE \
            -H "Authorization: Bearer ${{ secrets.VULTR_API_KEY }}"`
          echo $DELETE_FIREWALL
